{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACbC,YAAW,KACDC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXAO,SAASC,cAAc,SAe/BC,iBAAiB,UAAUC,IAC9BA,EAAMC,iBAEN,MAAMC,EAAaL,SAASC,cAAc,uBACpCK,EAAYN,SAASC,cAAc,sBACnCM,EAAcP,SAASC,cAAc,wBAErCR,EAAQe,OAAOH,EAAWI,OAC1BC,EAAOF,OAAOF,EAAUG,OACxBE,EAASH,OAAOD,EAAYE,OAE5BG,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAC/B,MAEMC,EAAUvB,EAFCsB,EAAI,EACHpB,EAAQoB,EAAIH,GAE9BE,EAASG,KAAKD,E,CAGhBpB,QAAQsB,IACNJ,EAASK,KAAIC,GACJA,EACJC,MAAKC,IACJC,EAAAhC,GAASiC,OAAOC,QACd,uBAAqBH,EAAI5B,eAAoB4B,EAAE3B,WAE1C2B,KAERI,OAAMC,IACLJ,EAAAhC,GAASiC,OAAOI,QACd,sBAAoBD,EAAEjC,eAAmBiC,EAAEhC,WAEtCgC,OAGd","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const delayInput = document.querySelector('input[name=\"delay\"]');\n  const stepInput = document.querySelector('input[name=\"step\"]');\n  const amountInput = document.querySelector('input[name=\"amount\"]');\n\n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n\n  const promises = [];\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const delayTime = delay + i * step;\n    const promise = createPromise(position, delayTime);\n    promises.push(promise);\n  }\n\n  Promise.all(\n    promises.map(p => {\n      return p\n        .then(result => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${result.position} in ${result.delay}ms`\n          );\n          return result;\n        })\n        .catch(error => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${error.position} in ${error.delay}ms`\n          );\n          return error;\n        });\n    })\n  );\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","delayInput","stepInput","amountInput","Number","value","step","amount","promises","i","promise","push","all","map","p","then","result","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.bd6abe1e.js.map"}