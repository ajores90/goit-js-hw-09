{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACbC,YAAW,WACDC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAXMO,SAASC,cAAc,SAe/BC,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBAWN,IATA,IAAMC,EAAaL,SAASC,cAAc,uBACpCK,EAAYN,SAASC,cAAc,sBACnCM,EAAcP,SAASC,cAAc,wBAErCR,EAAQe,OAAOH,EAAWI,OAC1BC,EAAOF,OAAOF,EAAUG,OACxBE,EAASH,OAAOD,EAAYE,OAE5BG,EAAW,GACRC,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAC/B,IAEMC,EAAUvB,EAFCsB,EAAI,EACHpB,EAAQoB,EAAIH,GAE9BE,EAASG,KAAKD,E,CAGhBpB,QAAQsB,WAAWJ,GAAUK,MAAK,SAAAC,GAChCA,EAAQC,SAAQ,SAAAC,GACQ,cAAlBA,EAAOC,OACTC,EAAAjC,GAASkC,OAAOC,QACd,uBAAqDC,OAA5BL,EAAOX,MAAMjB,SAAS,QAAyBiC,OAAnBL,EAAOX,MAAMhB,MAAM,OAG1E6B,EAAAjC,GAASkC,OAAOG,QACd,sBAAmDD,OAA7BL,EAAOO,OAAOnC,SAAS,QAA0BiC,OAApBL,EAAOO,OAAOlC,MAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const delayInput = document.querySelector('input[name=\"delay\"]');\n  const stepInput = document.querySelector('input[name=\"step\"]');\n  const amountInput = document.querySelector('input[name=\"amount\"]');\n\n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n\n  const promises = [];\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const delayTime = delay + i * step;\n    const promise = createPromise(position, delayTime);\n    promises.push(promise);\n  }\n\n  Promise.allSettled(promises).then(results => {\n    results.forEach(result => {\n      if (result.status === 'fulfilled') {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${result.value.position} in ${result.value.delay}ms`\n        );\n      } else {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${result.reason.position} in ${result.reason.delay}ms`\n        );\n      }\n    });\n  });\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","delayInput","stepInput","amountInput","Number","value","step","amount","promises","i","promise","push","allSettled","then","results","forEach","result","status","$parcel$interopDefault","Notify","success","concat","failure","reason"],"version":3,"file":"03-promises.f85fefc9.js.map"}